.\" Automatically generated by Pandoc 3.1.11.1
.\"
.TH "WK\-PROMPT" "1" "" "" ""
.SH NAME
wk\-prompt \- Shell scripting aide for \f[B]wk\f[R]​(1).
.SH SYNOPSIS
\f[B]source wk\-prompt ; wk~prompt~ \[dq]$\[at]\[dq] # or some other
list\f[R]
.SH DESCRIPTION
\f[B]wk\-prompt\f[R] is a tool for building wk menus from a list of
options.
It provides customization of wk through \f[B]ENVIRONMENT VARIABLES\f[R]
to get the desired look and feel.
This is not a script in and of itself, it should be sourced by other
\f[B]bash\f[R]​(1) scripts.
.SH ENVIRONMENT VARIABLES
.TP
\f[B]wk~keys~\f[R]
wk~keys~ is a bash array of wk trigger keys to map to the prompt
options.
By default this is (\f[B]a s d f g h j k l ;\f[R]) i.e.
the QWERTY home row keys.
.TP
\f[B]wk~nextkey~\f[R]
wk~nextkey~ is a wk trigger key to go to the next set of options, if
any.
By default this is \[aq]C\-n\[aq] (\f[B]CTRL+n\f[R]).
.TP
\f[B]wk~prevkey~\f[R]
wk~prevkey~ is a wk trigger key to go to the previous set of options, if
any.
By default this is \[aq]C\-p\[aq] (\f[B]CTRL+p\f[R]).
.TP
\f[B]wk~cmdprefix~\f[R]
wk~cmdprefix~ is the prefix that surrounds a command.
By default, this is \[aq]\f[B]{{\f[R]\[aq].
If the command contains closing braces (\[aq]\f[B]}}\f[R]\[aq]), then
this should be modified accordingly.
See \f[B]wks\f[R]​(5), \f[B]DELIMITER\f[R], for more info.
.TP
\f[B]wk~cmdsuffix~\f[R]
wk~cmdsuffix~ is the suffix that surrounds a command.
By default, this is \[aq]\f[B]}}\f[R]\[aq].
If the command contains closing braces (\[aq]\f[B]}}\f[R]\[aq]), then
this should be modified accordingly.
See \f[B]wks\f[R]​(5), \f[B]DELIMITER\f[R], for more info.
.TP
\f[B]wk~keywords~\f[R]
wk~keywords~ is a bash array of hooks and flags to give to every wks key
chord.
The default is an empty array.
.TP
\f[B]wk~preprocessorcmds~\f[R]
wk~preprocessorcmds~ is a bash array with any desired preprocessor
commands for the wks script.
The default is an empty array.
.TP
\f[B]build~wksdescription~\f[R]
build~wksdescription~ is a bash function which takes in one argument and
prints a description.
The argument is an item from the wk~options~ array.
By default the argument is returned unchanged.
This function may be redefined to get the desired description for each
option.
.SH EXAMPLE
A basic example might be something like this \[aq]wk\-prompt\-test\[aq]
script:
.IP
.EX
#!/usr/bin/env bash

source wk\-prompt # must be in your $PATH

wk_preprocessor_cmds=(\[dq]:delay 0\[dq]) # set delay to 0
wk_keywords=(\[dq]+write\[dq]) # write all commands
wk_prompt \[dq]$\[at]\[dq]
.EE
.PP
Such a script could be called like so:
.IP
.EX
# {0..n} expands to the numbers between 0 and n.
$ wk\-prompt\-test {01..30}
.EE
.PP
The \[aq]wk\-prompt\-test\[aq] script would give a wk menu with options
01 through 30 and write the selected option to stdout, if any.
.PP
A more useful example might be something like this
\[aq]wk\-video\-prompt\[aq] script:
.IP
.EX
#!/usr/bin/env bash

source wk\-prompt # must be in your PATH

wk_preprocessor_cmds=(\[dq]:delay 0\[dq]) # set delay to 0
wk_keywords=(\[dq]+write\[dq]) # write all commands

build_wks_description() {
    echo \[dq]${1##*/}\[dq] # trim everything but the file name
}

# Read files in the playlist into a videos array
readarray \-t videos <\[dq]playlist.m3u\[dq]

# A similar example where the videos are given by some command
# readarray \-t videos < <(echo \[dq]/path/to/videos/\[dq]*)

# Pass the videos to wk_prompt and get the user selection
selection=\[dq]$(wk_prompt \[dq]${videos[\[at]]}\[dq])\[dq]

# If a video was selected, play it with mpv
[[ \-n \[dq]$selection\[dq] ]] && mpv \[dq]$selection\[dq]
.EE
.PP
Such a script would give the user a prompt with the files in
\[dq]playlist.m3u\[dq] and play the selected file back using mpv.
There is a bit more going on here, but really not much has changed other
than how the options and descriptions are generated.
.SH BUG REPORTS
If you find a bug in \f[B]wk\f[R], please report it at \c
.UR https://github.com/3L0C/wk-prompt
.UE \c
\&.
.SH SEE ALSO
\f[B]wk\f[R]​(1), \f[B]wks\f[R]​(5), and \f[B]bash\f[R]​(1)
.SH AUTHORS
3L0C <dotbox at mailbox.org>.
